{"ast":null,"code":"var _jsxFileName = \"/Users/charlie/Documents/coding/React_Notes_App/react_notes/src/Note.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Note = () => {\n  _s();\n  var _categories$find;\n  const [notes, setNotes] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [inputE, setInputE] = useState('');\n  const [inputG, setInputG] = useState('');\n  const [flippedCards, setFlippedCards] = useState([]);\n  useEffect(() => {\n    fetchCategories();\n    fetchNotes();\n  }, []);\n  const fetchCategories = async () => {\n    try {\n      const response = await fetch('/api/categories');\n      const data = await response.json();\n      setCategories(data);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    }\n  };\n  const fetchNotes = async (categoryId = '') => {\n    try {\n      const url = categoryId ? `/api/notes?category=${categoryId}` : '/api/notes';\n      const response = await fetch(url);\n      const data = await response.json();\n      setNotes(data);\n      setFlippedCards(new Array(data.length).fill(false));\n    } catch (error) {\n      console.error('Error fetching notes:', error);\n    }\n  };\n  const addNote = async () => {\n    if (inputE.trim() !== '' && inputG.trim() !== '' && selectedCategory) {\n      try {\n        const response = await fetch('/api/notes', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            german: inputG,\n            english: inputE,\n            categoryId: selectedCategory\n          })\n        });\n        const newNote = await response.json();\n        setNotes([...notes, newNote]);\n        setFlippedCards([...flippedCards, false]);\n        setInputG('');\n        setInputE('');\n      } catch (error) {\n        console.error('Error adding note:', error);\n      }\n    }\n  };\n  const deleteNote = async id => {\n    try {\n      await fetch(`/api/notes/${id}`, {\n        method: 'DELETE'\n      });\n      const newNotes = notes.filter(note => note.id !== id);\n      setNotes(newNotes);\n      setFlippedCards(flippedCards.filter((_, i) => notes[i].id !== id));\n    } catch (error) {\n      console.error('Error deleting note:', error);\n    }\n  };\n  const flipCard = idx => {\n    const newFlippedCards = [...flippedCards];\n    newFlippedCards[idx] = !newFlippedCards[idx];\n    setFlippedCards(newFlippedCards);\n  };\n  const handleCategoryChange = e => {\n    const categoryId = e.target.value;\n    setSelectedCategory(categoryId);\n    fetchNotes(categoryId);\n  };\n  const onDragStart = (e, index) => {\n    setDraggedItem(notes[index]);\n    e.dataTransfer.setData('text/plain', index);\n    e.target.style.opacity = '0.5';\n  };\n  const onDragEnd = e => {\n    e.target.style.opacity = '1';\n    setDraggedItem(null);\n  };\n  const onDragOver = (e, index) => {\n    e.preventDefault();\n    const draggedOverItem = notes[index];\n\n    // If the item is dragged over itself, ignore\n    if (draggedItem === draggedOverItem) {\n      return;\n    }\n\n    // Filter out the currently dragged item\n    let newNotes = notes.filter(note => note !== draggedItem);\n\n    // Add the dragged item after the dragged over item\n    newNotes.splice(index, 0, draggedItem);\n    setNotes(newNotes);\n  };\n  const onDrop = e => {\n    e.preventDefault();\n    const newFlippedCards = notes.map(note => flippedCards[notes.findIndex(n => n.id === note.id)]);\n    setFlippedCards(newFlippedCards);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"1.5em\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory,\n        onChange: handleCategoryChange,\n        style: {\n          padding: '10px',\n          marginRight: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.id,\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputG,\n        onChange: e => setInputG(e.target.value),\n        placeholder: selectedCategory ? `Enter a ${((_categories$find = categories.find(category => category.id === Number(selectedCategory))) === null || _categories$find === void 0 ? void 0 : _categories$find.name) || ''} word` : '',\n        style: {\n          padding: '10px',\n          width: '30%',\n          marginRight: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputE,\n        onChange: e => setInputE(e.target.value),\n        placeholder: selectedCategory ? `Enter an English translation` : '',\n        style: {\n          padding: '10px',\n          width: '30%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNote,\n        style: {\n          padding: '10px 20px',\n          marginLeft: '10px'\n        },\n        children: \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this), selectedCategory ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        marginTop: '20px',\n        listStyleType: 'none',\n        padding: 0\n      },\n      children: notes.map((note, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: '20px',\n          padding: '10px',\n          backgroundColor: '#f9f9f9',\n          border: '1px solid #ddd',\n          borderRadius: '5px',\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            width: '100%',\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: flippedCards[idx] ? note.english : note.german\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => flipCard(idx),\n            style: {\n              marginLeft: '10px'\n            },\n            children: \"Flip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteNote(note.id),\n          style: {\n            width: '20%',\n            padding: '5px',\n            marginTop: '10px'\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(Note, \"hPQb9bMtJmPB0g2JuBNTTdRxlxE=\");\n_c = Note;\nexport default Note;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Note","_s","_categories$find","notes","setNotes","categories","setCategories","selectedCategory","setSelectedCategory","inputE","setInputE","inputG","setInputG","flippedCards","setFlippedCards","fetchCategories","fetchNotes","response","fetch","data","json","error","console","categoryId","url","Array","length","fill","addNote","trim","method","headers","body","JSON","stringify","german","english","newNote","deleteNote","id","newNotes","filter","note","_","i","flipCard","idx","newFlippedCards","handleCategoryChange","e","target","value","onDragStart","index","setDraggedItem","dataTransfer","setData","style","opacity","onDragEnd","onDragOver","preventDefault","draggedOverItem","draggedItem","splice","onDrop","map","findIndex","n","padding","children","marginBottom","onChange","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","category","name","type","placeholder","find","Number","width","onClick","marginLeft","marginTop","listStyleType","backgroundColor","border","borderRadius","display","flexDirection","justifyContent","alignItems","_c","$RefreshReg$"],"sources":["/Users/charlie/Documents/coding/React_Notes_App/react_notes/src/Note.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Note = () => {\n  const [notes, setNotes] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [inputE, setInputE] = useState('');\n  const [inputG, setInputG] = useState('');\n  const [flippedCards, setFlippedCards] = useState([]);\n\n  useEffect(() => {\n    fetchCategories();\n    fetchNotes();\n  }, []);\n\n\n  const fetchCategories = async () => {\n    try {\n      const response = await fetch('/api/categories');\n      const data = await response.json();\n      setCategories(data);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    }\n  };\n\n  const fetchNotes = async (categoryId = '') => {\n    try {\n      const url = categoryId ? `/api/notes?category=${categoryId}` : '/api/notes';\n      const response = await fetch(url);\n      const data = await response.json();\n      setNotes(data);\n      setFlippedCards(new Array(data.length).fill(false));\n    } catch (error) {\n      console.error('Error fetching notes:', error);\n    }\n  };\n\n  const addNote = async () => {\n    if (inputE.trim() !== '' && inputG.trim() !== '' && selectedCategory) {\n      try {\n        const response = await fetch('/api/notes', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ \n            german: inputG, \n            english: inputE, \n            categoryId: selectedCategory \n          }),\n        });\n        const newNote = await response.json();\n        setNotes([...notes, newNote]);\n        setFlippedCards([...flippedCards, false]);\n        setInputG('');\n        setInputE('');\n      } catch (error) {\n        console.error('Error adding note:', error);\n      }\n    }\n  };\n\n  const deleteNote = async (id) => {\n    try {\n      await fetch(`/api/notes/${id}`, {\n        method: 'DELETE',\n      });\n      const newNotes = notes.filter(note => note.id !== id);\n      setNotes(newNotes);\n      setFlippedCards(flippedCards.filter((_, i) => notes[i].id !== id));\n    } catch (error) {\n      console.error('Error deleting note:', error);\n    }\n  };\n\n  const flipCard = (idx) => {\n    const newFlippedCards = [...flippedCards];\n    newFlippedCards[idx] = !newFlippedCards[idx];\n    setFlippedCards(newFlippedCards);\n  };\n\n  const handleCategoryChange = (e) => {\n    const categoryId = e.target.value;\n    setSelectedCategory(categoryId);\n    fetchNotes(categoryId);\n  };\n\n  const onDragStart = (e, index) => {\n    setDraggedItem(notes[index]);\n    e.dataTransfer.setData('text/plain', index);\n    e.target.style.opacity = '0.5';\n  };\n\n  const onDragEnd = (e) => {\n    e.target.style.opacity = '1';\n    setDraggedItem(null);\n  };\n\n  const onDragOver = (e, index) => {\n    e.preventDefault();\n    const draggedOverItem = notes[index];\n\n    // If the item is dragged over itself, ignore\n    if (draggedItem === draggedOverItem) {\n      return;\n    }\n\n    // Filter out the currently dragged item\n    let newNotes = notes.filter(note => note !== draggedItem);\n\n    // Add the dragged item after the dragged over item\n    newNotes.splice(index, 0, draggedItem);\n\n    setNotes(newNotes);\n  };\n\n  const onDrop = (e) => {\n    e.preventDefault();\n    const newFlippedCards = notes.map(note => flippedCards[notes.findIndex(n => n.id === note.id)]);\n    setFlippedCards(newFlippedCards);\n  };\n\n\n\n  return (\n    <div style={{ padding: '20px' }}>\n      \n  \n      <div style={{marginBottom:\"1.5em\"}}>\n        <select \n          value={selectedCategory} \n          onChange={handleCategoryChange}\n          style={{ padding: '10px', marginRight: '10px' }}\n        >\n          <option value=\"\">Select a category</option>\n          {categories.map(category => (\n            <option key={category.id} value={category.id}>\n              {category.name}\n            </option>\n          ))}\n        </select>\n        </div>\n        <div>\n        <input\n          type=\"text\"\n          value={inputG}\n          onChange={(e) => setInputG(e.target.value)}\n          placeholder={\n    selectedCategory\n      ? `Enter a ${categories.find(category => category.id === Number(selectedCategory))?.name || ''} word`\n      : ''\n  }\n          style={{ padding: '10px', width: '30%', marginRight: '10px' }}\n        />\n        <input\n          type=\"text\"\n          value={inputE}\n          onChange={(e) => setInputE(e.target.value)}\n          placeholder={selectedCategory\n      ? `Enter an English translation`\n      : ''}\n          style={{ padding: '10px', width: '30%' }}\n        />\n        <button onClick={addNote} style={{ padding: '10px 20px', marginLeft: '10px' }}>\n          Add Note\n        </button>\n      </div>\n      {selectedCategory ? (\n      <ul style={{ marginTop: '20px', listStyleType: 'none', padding: 0 }}>\n        {notes.map((note, idx) => (\n          <li\n            key={note.id}\n            style={{\n              marginBottom: '20px',\n              padding: '10px',\n              backgroundColor: '#f9f9f9',\n              border: '1px solid #ddd',\n              borderRadius: '5px',\n              display: 'flex',\n              flexDirection: 'column'\n            }}\n          >\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                width: '100%',\n                marginBottom: '10px',\n              }}\n            >\n              <div>{flippedCards[idx] ? note.english : note.german}</div>\n              <button onClick={() => flipCard(idx)} style={{ marginLeft: '10px' }}>\n                Flip\n              </button>\n            </div>\n            <button\n              onClick={() => deleteNote(note.id)}\n              style={{\n                width: '20%',\n                padding: '5px',\n                marginTop: '10px',\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n      ):(\n      null\n    )}\n    </div>\n  );\n\n}\nexport default Note;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}